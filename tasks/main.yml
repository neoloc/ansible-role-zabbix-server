---
# tasks file for role
- name: setup zabbix-server
  block:
    - name: install zabbix-server requirements
      ansible.builtin.package:
        name: "{{ zabbix_server_requirements }}"
        state: present
      when: zabbix_server_configure == true
    
    - name: install zabbix_server
      ansible.builtin.package:
        name:
          - zabbix-server-mysql
          - zabbix-sql-scripts
        state: present
      when: zabbix_server_configure == true
    
    - name: unarchive zabbix schema
      ansible.builtin.command:
        cmd: gunzip {{ zabbix_server_docdir }}/zabbix-sql-scripts/mysql/server.sql.gz
        creates: "{{ zabbix_server_docdir }}/zabbix-sql-scripts/mysql/server.sql"
      notify:
        - restart zabbix_server
      loop_control:
        label: "{{ item.path }}"
      register: unarchive_schema
      when: zabbix_server_configure == true
    
    - name: import zabbix schema on first node
      community.mysql.mysql_db:
        state: import
        name: "{{ zabbix_server_database_name }}"
        target: "{{ zabbix_server_docdir }}/zabbix-sql-scripts/mysql/server.sql"
        login_host: "{{ zabbix_server_database_host | default(omit) }}"
        login_user: "{{ zabbix_server_database_user }}"
        login_password: "{{ zabbix_server_database_password }}"
      when: 
        - zabbix_server_configure == true
        - unarchive_schema.changed
        - zabbix_server_ha == true
      run_once: true
    
    - name: import zabbix schema
      community.mysql.mysql_db:
        state: import
        name: "{{ zabbix_server_database_name }}"
        target: "{{ zabbix_server_docdir }}/zabbix-sql-scripts/mysql/server.sql"
        login_host: "{{ zabbix_server_database_host | default(omit) }}"
        login_user: "{{ zabbix_server_database_user }}"
        login_password: "{{ zabbix_server_database_password }}"
      when: 
        - zabbix_server_configure == true
        - unarchive_schema.changed
        - zabbix_server_ha == false
    
    - name: configure selinux
      block:
        - name: set selinux settings for zabbix_server
          ansible.posix.seboolean:
            name: "{{ item }}"
            state: yes
            persistent: yes
          loop:
            - httpd_can_connect_zabbix
            - httpd_can_network_connect_db
            - zabbix_can_network
          when: zabbix_server_configure == true
    
        - name: place selinux type enforcement
          ansible.builtin.copy:
            src: zabbixserver.te
            dest: /etc/zabbix/zabbixserver.te
            mode: "0644"
          notify:
            - create selinux mod for zabbix_server
            - create selinux pp for zabbix_server
            - load selinux pp for zabbix_server
      when:
        - ansible_selinux.status is defined
        - ansible_selinux.status == "enabled"
        - zabbix_server_configure == true
    
    - name: flush handlers
      ansible.builtin.meta: flush_handlers
    
    - name: configure zabbix_server
      ansible.builtin.template:
        src: zabbix_server.conf.j2
        dest: /etc/zabbix/zabbix_server.conf
        mode: "0644"
      notify:
        - restart zabbix_server 
      when: zabbix_server_configure == true
    
    - name: start and enable zabbix_server
      ansible.builtin.service:
        name: zabbix-server
        state: started
        enabled: yes
      when:
        - not ci
        - zabbix_server_configure == true
      vars:
        ci: "{{ lookup('env', 'CI') }}"
  tags:
    - zabbix-server
    - zabbix
  when: zabbix_server_configure == true
